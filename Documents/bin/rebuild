#!/usr/bin/env bash

set -uo pipefail
IFS=$'\n\t'

if [[ "${BASH_SOURCE[0]}" = "$0" ]]; then

  force=0
  if [ "$#" -gt 0 ] && [ "$1" = "-f" ]; then
    force=1
    shift
  fi
  if [ "$#" -gt 1 ]; then
    echo "Label should be one word"
    exit 1
  fi

  # cd to the dotfiles root
  pushd "$HOME"/.dotfiles/ > /dev/null || exit 1

  # check changes
  git --git-dir=dotfiles.git --work-tree="$HOME" diff --quiet nixos
  diff=$?
  new_files=$(git --git-dir=dotfiles.git --work-tree="$HOME" ls-files --others nixos)
  if [ -z "$new_files" ] && [ "$diff" -eq "0" ] && [ "$force" -eq 0 ]; then
    echo "Nothing to rebuild"
    popd > /dev/null || exit 1
    exit 0
  fi

  # format files
  alejandra --quiet nixos

  # show diff
  git --git-dir=dotfiles.git --work-tree="$HOME" diff nixos | bat --paging always

  if [ "$#" -gt 0 ]; then
    label="$1"
  else
    read -rp "Label: " label
  fi

  # Copy, rebuild, output simplified errors, log trackebacks
  sudo rsync --delete --archive --prune-empty-dirs --human-readable --itemize-changes nixos /etc/

  if [ -n "$label" ]; then
    echo "NixOS Rebuilding as '$label' ..."
    sudo sed -i "s/# system\.nixos\.label = \"REPLACE_ME\";/system.nixos.label = \"$label\";/" /etc/nixos/modules/system.nix
  else
    echo "NixOS Rebuilding ..."
  fi

  sudo NIXOS_LABEL="$label" nixos-rebuild switch 2>&1 | tee /tmp/nixos-switch.log
  success=$?
  if [ "$success" -ne 0 ]; then
    echo -e "\n\n"
    grep --only-matching -P 'error: .+' /tmp/nixos-switch.log | grep --color "error:"
    exit 1
  fi

  current=$(nixos-rebuild list-generations | grep current | awk -F ' ' '{print $5}')
  echo "NixOS Rebuilt as $red$current$reset"
  git --git-dir=dotfiles.git --work-tree="$HOME" add nixos
  git --git-dir=dotfiles.git --work-tree="$HOME" commit -m "Rebuilt NixOS $current"

  popd > /dev/null || exit 1
  notify-send -e "NixOS Rebuilt OK!" --icon=software-update-available
fi
